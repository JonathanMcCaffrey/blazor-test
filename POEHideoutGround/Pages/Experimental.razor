@page "/experimental"
@inject HttpClient Http
Hidden page for testing new features.


@if (groundData == null)
{
    <p>Hi</p>
}
else
{
    <div style="display:grid;width:100%;grid-gap:5px;grid-template-columns:70% 30%">
        <div>
            <div style="display:grid;width:100%;grid-gap:5px;">
                <POEHideoutGround.Components.TileCalculator TileTypeName="ground" TileData=@groundData DefaultTileData=@DefaultGroundTile />
                <POEHideoutGround.Components.TileCalculator TileTypeName="water" TileData=@waterData DefaultTileData=@DefaultWaterTile />
                <POEHideoutGround.Components.TileCalculator TileTypeName="grassPatches" TileData=@grassPatchesData DefaultTileData=@DefaultGrassPatchesTile />
            </div>
        </div>

        <div></div>
    </div>
}

@code {

    static TileData DefaultGroundTile = new TileData(name: "Dirt Ground", var: "2", hash: "1798490749", image: "dirt_3_l");
    static TileData DefaultWaterTile = new TileData(name: "Water Plane", var: "22", hash: "1179014731", image: "water_23_l");
    static TileData DefaultGrassPatchesTile = new TileData(name: "Grass Patch", var: "4", hash: "3856837925", image: "grasspatch_5_l");


    public TileData[] groundData;
    public TileData[] waterData;
    public TileData[] grassPatchesData;

    protected override async Task OnInitializedAsync()
    {
        //TODO: This loading seems too slow. Look into why, and speed this up
        groundData = await Http.GetFromJsonAsync<TileData[]>("data/ground.json");
        waterData = await Http.GetFromJsonAsync<TileData[]>("data/water.json");
        grassPatchesData = await Http.GetFromJsonAsync<TileData[]>("data/grassPatches.json");

    }

}